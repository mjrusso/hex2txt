<.flash_group flash={@flash} />

<div class="px-4 py-10 sm:px-6 sm:py-28 lg:px-8 xl:px-28 xl:py-32">
  <div class="mx-auto max-w-3xl lg:mx-0">
    <div class="bg-white border-solid border-4 border-gray-500 p-8 max-w-3xl w-full">
      <div class="space-y-8">
        <div class="relative mb-12">
          <div class="absolute inset-0 bg-brand transform translate-x-2 translate-y-2"></div>
          <div class="relative bg-white border-2 border-brand
            p-6 space-y-8">
            <h1 class="text-brand flex items-center text-2xl font-black leading-6">
              <kbd>hex2txt</kbd>
            </h1>

            <p class="font-mono text-[1.6rem] font-semibold leading-10 tracking-tighter text-zinc-900 text-balance">
              quickly convert
              <a class="text-brand hover:text-blue-700" href="https://hex.pm">
                hex.pm
              </a>
              package docs to an
              <a class="text-brand hover:text-blue-700" href="https://llmstxt.org">
                <kbd>/llms.txt</kbd>
              </a>
              file
            </p>
          </div>
        </div>

        <h2 class="text-2xl font-bold mb-2 text-center text-brand">
          Usage Details
        </h2>

        <div class="bg-white border border-gray-200 shadow-lg p-8 !mt-4 max-w-3xl w-full space-y-8">
          <div class="border-l-4 border-green-500 pl-4 overflow-auto">
            <h2 class="text-xl font-semibold mb-2 text-green-700">Latest Version</h2>
            <p class="text-gray-600 mb-2 text-sm">Generate an <kbd>/llms.txt</kbd> file
              for the most recent version of a package:</p>
            <code class="bg-gray-100 p-2 rounded block text-sm font-mono mb-4 whitespace-nowrap">
              https://hex2txt.fly.dev/&lt;package&gt;/llms.txt
            </code>
            <p class="text-sm text-gray-500 mb-2">
              Examples:
            </p>
            <ul class="list-disc pl-5 space-y-2 text-xs">
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/geo/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/geo/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- Geo</span>
              </li>
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/flop_phoenix/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/flop_phoenix/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- Flop Phoenix</span>
              </li>
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/phoenix_live_view/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/phoenix_live_view/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- LiveView</span>
              </li>
            </ul>
          </div>

          <div class="border-l-4 border-purple-500 pl-4 overflow-auto">
            <h2 class="text-xl font-semibold mb-2 text-purple-700">Specific Version</h2>
            <p class="text-gray-600 mb-2 text-sm">Generate an <kbd>/llms.txt</kbd> file
              for a specific version of a package:</p>
            <code class="bg-gray-100 p-2 rounded block text-sm font-mono mb-4 whitespace-nowrap">
              https://hex2txt.fly.dev/&lt;package&gt;/&lt;version&gt;/llms.txt
            </code>
            <p class="text-sm text-gray-500 mb-2">
              Examples:
            </p>
            <ul class="list-disc pl-5 space-y-2 text-xs">
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/elixir/1.18.0-rc.0/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/elixir/1.18.0-rc.0/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- Elixir v1.18.0-rc.0</span>
              </li>
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/ecto_ulid_next/1.0.2/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/ecto_ulid_next/1.0.2/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- Ecto.ULID Next v1.0.2</span>
              </li>
              <li>
                <kbd>
                  <a
                    href="https://hex2txt.fly.dev/phoenix/1.7.17/llms.txt"
                    class="text-blue-500 hover:underline"
                    target="_blank"
                  >
                    https://hex2txt.fly.dev/phoenix/1.7.17/llms.txt
                  </a>
                </kbd>
                <span class="text-gray-500 text-sm">- Phoenix v1.7.17</span>
              </li>
            </ul>
          </div>
          <div class="mt-8 text-xs text-gray-500">
            Replace <code class="bg-gray-100 px-1 rounded">&lt;package&gt;</code>
            with the desired package name and
            <code class="bg-gray-100 px-1 rounded">&lt;version&gt;</code>
            with the specific version number.
          </div>
        </div>

        <div class="mt-12">
          <h2 class="text-2xl font-bold mb-6 text-center text-brand">
            FAQ
          </h2>
          <div class="space-y-6">
            <div class="bg-white border border-gray-200 shadow-sm">
              <div class="p-4">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">
                  Isn't this just generating a Markdown file?
                </h3>
                <p class="text-gray-600">
                  Yes. Although the implementation is currently
                  straightforward, the end goal is to produce files that are
                  optimized specifically for inference-time consumption by an
                  LLM (or LLM-adjacent tooling). The <kbd>/llms.txt</kbd>
                  component is a signal that these files are intended for use
                  by machines, not humans.
                </p>
              </div>
            </div>

            <div class="bg-white border border-gray-200 shadow-sm">
              <div class="p-4">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">
                  Why provide "inference-time" documentation?
                </h3>
                <p class="text-gray-600 overflow-auto">
                  Here's an example of two real sessions using
                  <a class="text-brand hover:text-blue-700" href="https://aider.chat/">
                    Aider:
                  </a>
                  <ul class="list-disc pl-5 space-y-2 my-4">
                    <li>
                      <em>Session 1:</em>
                      Aider hallucinates and generates broken code
                      (it is not familiar with the
                      <a
                        class="text-brand hover:text-blue-700"
                        href="https://hexdocs.pm/easyhtml/readme.html"
                      >
                        EasyHTML
                      </a>
                      package)
                    </li>
                    <li>
                      <em>Session 2:</em>
                      Aider generates perfect code, because
                      the EasyHTML docs are loaded into context (via the
                      <kbd class="bg-gray-800 text-green-400 p-1 rounded inline-block text-sm font-mono whitespace-nowrap">
                        /web
                        <a href="https://hex2txt.fly.dev/easyhtml/llms.txt">
                          https://hex2txt.fly.dev/easyhtml/llms.txt
                        </a>
                      </kbd>
                      command)
                    </li>
                  </ul>
                  <h6 class="text-sm font-semibold text-gray-800 my-2">Session 1 ⁉️</h6>
                  <!-- with thanks to https://www.creative-tim.com/twcomponents/component/terminal -->
                  <div class="coding inverse-toggle px-5 pt-4 shadow-lg text-gray-100 text-xs font-mono subpixel-antialiased bg-gray-800  pb-6 pt-4 rounded-lg leading-normal overflow-scroll">
                    <div class="top mb-2 flex">
                      <div class="h-3 w-3 bg-red-500 rounded-full"></div>
                      <div class="ml-2 h-3 w-3 bg-orange-300 rounded-full"></div>
                      <div class="ml-2 h-3 w-3 bg-green-500 rounded-full"></div>
                    </div>
                    <div class="mt-4 flex">
                      <span class="text-green-400">$</span>
                      <p class="flex-1 typing items-center pl-2">
                        aider --sonnet <br />
                      </p>
                    </div>
                    <div>
                      <br /> Main model: claude-3-5-sonnet-20241022 with diff edit format,
                      infinite output <br /> Weak model: claude-3-5-haiku-20241022<br /><br />
                      <span class="text-green-400">
                        > /ask Using EasyHTML, how to find all OpenGraph tags in an HTML document? Use Elixir.
                      </span>

                      <br /><br /> Using EasyHTML in Elixir, you can find all OpenGraph tags like
                      this: <br />

                      <div class="whitespace-pre-wrap font-mono" phx-no-format>
```
def find_og_tags(html) do
  &lbrace;:ok, document&rbrace; = EasyHTML.parse(html)

  document
  |> EasyHTML.find("meta[property^='og:']")
  |> Enum.map(fn tag ->
    %&lbrace;
      property: EasyHTML.attr(tag, "property"),
      content: EasyHTML.attr(tag, "content")
    &rbrace;
  end)
end
```
          </div> You can use it like this:
                      <br />

                      <div class="whitespace-pre-wrap font-mono" phx-no-format>
```
 html = """
 &lt;html&gt;
   &lt;head&gt;
     &lt;meta property="og:title" content="My Page Title"&gt;
     &lt;meta property="og:description" content="Page Description"&gt;
     &lt;meta property="og:image" content="image.jpg"&gt;
   &lt;/head&gt;
 &lt;/html&gt;
 """

 og_tags = find_og_tags(html)
 # Returns a list of maps with property and content:
 # [
 #   %&lbrace;property: "og:title", content: "My Page Title"&rbrace;,
 #   %&lbrace;property: "og:description", content: "Page Description"&rbrace;,
 #   %&lbrace;property: "og:image", content: "image.jpg"&rbrace;
 # ]
```
     </div> The CSS selector
                      <kbd>meta[property^='og:']</kbd>
                      will match all meta tags where the property attribute starts with "og:". The function returns a list of maps
                      containing the property and content values for each OpenGraph tag found.
                      <br />
                      <br />
                      <span class="text-blue-400">
                        Tokens: 309 sent, 286 received. Cost: $0.0052 message, $0.0052 session.
                      </span>
                      <br />
                    </div>
                  </div>

                  <h6 class="text-sm font-semibold text-gray-800 mb-2 mt-6">Session 2 ✅</h6>

                  <div class="coding inverse-toggle px-5 pt-4 shadow-lg text-gray-100 text-xs font-mono subpixel-antialiased bg-gray-800 pb-6 pt-4 rounded-lg leading-normal overflow-scroll">
                    <div class="top mb-2 flex">
                      <div class="h-3 w-3 bg-red-500 rounded-full"></div>
                      <div class="ml-2 h-3 w-3 bg-orange-300 rounded-full"></div>
                      <div class="ml-2 h-3 w-3 bg-green-500 rounded-full"></div>
                    </div>
                    <div class="mt-4 flex">
                      <span class="text-green-400">$</span>
                      <p class="flex-1 typing items-center pl-2">
                        aider --sonnet <br />
                      </p>
                    </div>
                    <div>
                      <br /> Main model: claude-3-5-sonnet-20241022 with diff edit format,
                      infinite output <br /> Weak model: claude-3-5-haiku-20241022<br /><br />

                      <span class="text-green-400">
                        > /web https://hex2txt.fly.dev/easyhtml/llms.txt
                      </span>

                      <br /> Scraping https://hex2txt.fly.dev/easyhtml/llms.txt... <br />
                      ... added to chat. <br /> <br />

                      <span class="text-green-400">
                        > /ask Using EasyHTML, how to find all OpenGraph tags in an HTML document?
                      </span>

                      <br /><br />
                      Based on the documentation shown, you can use EasyHTML's Access implementation (the
                      <kbd>[]</kbd>
                      operator) to find meta tags with OpenGraph properties. Here's
                      how you would likely do it: <br />

                      <div class="whitespace-pre-wrap font-mono" phx-no-format>
```
html = EasyHTML.parse!(document)
html["meta[property^='og:']"]
```
          </div> This would find all
                      <kbd>&lt;meta&gt;</kbd>
                      tags where the <kbd>property</kbd>
                      attribute starts with "og:" which is the standard prefix for OpenGraph tags.
                      <br /> For example, if you had HTML like: <br />

                      <div class="whitespace-pre-wrap font-mono" phx-no-format>
```
 html = """
 &lt;html&gt;
   &lt;head&gt;
     &lt;meta property="og:title" content="My Page Title"&gt;
     &lt;meta property="og:description" content="Page description"&gt;
   &lt;/head&gt;
   &lt;body&gt;...&lt;/body&gt;
 &lt;/html&gt;
 """
```
          </div> The above code would find those meta tags.<br /><br />
                      Note that EasyHTML is a wrapper around Floki and uses its CSS selector syntax,
                      so this should work as expected. You can then enumerate over the results since EasyHTML implements <kbd>Enumerable</kbd>.<br /><br />
                      However, if you need to get the specific content of these tags, you might need
                      to use additional Floki functions as this isn't explicitly shown in the documentation provided.<br />

                      <br />
                      <span class="text-blue-400">
                        Tokens: 548 sent, 234 received. Cost: $0.0052 message, $0.0052 session.
                      </span>
                      <br />
                    </div>
                  </div>
                </p>
              </div>
            </div>

            <div class="bg-white border border-gray-200 shadow-sm">
              <div class="p-4">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">
                  Why doesn't this work for <strong><kbd>&lt;package-name&gt;</kbd></strong>?
                </h3>
                <p class="text-gray-600">
                  This works by scraping output files produced
                  by <a
                    class="text-brand hover:text-blue-700"
                    href="https://github.com/elixir-lang/ex_doc"
                  >ExDoc</a>,
                  making numerous assumptions (for example, relying on ExDoc
                  to generate JavaScript files with embedded JSON assigned to
                  specific JS variable names). This is obviously fragile. For
                  this reason, documentation published with older versions of
                  ExDoc might not work.
                </p>
              </div>
            </div>

            <div class="bg-white border border-gray-200 shadow-sm">
              <div class="p-4">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">
                  Shouldn't this be part of ExDoc?
                </h3>
                <p class="text-gray-600">
                  Yes, I think so (with, perhaps, additional web-facing tooling
                  facilitated by other Hex-related projects). Iterating on this
                  prototype and collecting community feedback is the best way
                  to determine how useful this feature is and to inform
                  requirements.
                </p>
              </div>
            </div>

            <div class="bg-white border border-gray-200 shadow-sm">
              <div class="p-4 space-y-4">
                <h3 class="text-lg font-semibold text-gray-800 mb-2">
                  What are the limitations?
                </h3>
                <p class="text-gray-600">
                  This is currently prototype-quality code, without proper
                  error handling (among other deficiencies).
                </p>
                <p class="text-gray-600">
                  But the biggest practical issue is the size of generated
                  documentation files, specifically for packages with a large
                  API footprint (such as Phoenix, Ecto, Elixir, etc.). These
                  docs can consume several hundreds of thousands of tokens and
                  easily exhaust all available LLM context space.
                </p>
                <p class="text-gray-600">
                  We need to find ways to reduce the file size (e.g. by only
                  including information for a subset of modules, or by dropping
                  examples, etc.) Additionally, there may be clever ways to use
                  embeddings to dynamically include only the relevant
                  components of documentation for the task-at-hand.
                </p>
                <p class="text-gray-600">
                  Please
                  <a
                    class="text-brand hover:text-blue-700"
                    href="https://github.com/mjrusso/hex2txt/pulls"
                  >
                    submit a PR on GitHub
                  </a>
                  if you'd like to help
                  contribute. Some work (and lots of experimentation) will
                  be required to discover how to most effectively assemble
                  LLM-specific documentation.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="flex">
      <div class="w-full">
        <div class="mt-10 grid grid-cols-1 gap-y-4 text-sm leading-6 text-zinc-700">
          <div>
            <a
              href="https://twitter.com/mjrusso"
              class="group -mx-2 -my-0.5 inline-flex items-center gap-3 rounded-lg px-2 py-0.5 hover:bg-zinc-50 hover:text-zinc-900"
            >
              <svg
                viewBox="0 0 16 16"
                aria-hidden="true"
                class="h-4 w-4 fill-zinc-400 group-hover:fill-zinc-600"
              >
                <path d="M5.403 14c5.283 0 8.172-4.617 8.172-8.62 0-.131 0-.262-.008-.391A6.033 6.033 0 0 0 15 3.419a5.503 5.503 0 0 1-1.65.477 3.018 3.018 0 0 0 1.263-1.676 5.579 5.579 0 0 1-1.824.736 2.832 2.832 0 0 0-1.63-.916 2.746 2.746 0 0 0-1.821.319A2.973 2.973 0 0 0 8.076 3.78a3.185 3.185 0 0 0-.182 1.938 7.826 7.826 0 0 1-3.279-.918 8.253 8.253 0 0 1-2.64-2.247 3.176 3.176 0 0 0-.315 2.208 3.037 3.037 0 0 0 1.203 1.836A2.739 2.739 0 0 1 1.56 6.22v.038c0 .7.23 1.377.65 1.919.42.54 1.004.912 1.654 1.05-.423.122-.866.14-1.297.052.184.602.541 1.129 1.022 1.506a2.78 2.78 0 0 0 1.662.598 5.656 5.656 0 0 1-2.007 1.074A5.475 5.475 0 0 1 1 12.64a7.827 7.827 0 0 0 4.403 1.358" />
              </svg>
              Follow @mjrusso on Twitter
            </a>
          </div>

          <div>
            <a
              href="https://github.com/mjrusso/hex2txt"
              class="group -mx-2 -my-0.5 inline-flex items-center gap-3 rounded-lg px-2 py-0.5 hover:bg-zinc-50 hover:text-zinc-900"
            >
              <svg
                viewBox="0 0 24 24"
                aria-hidden="true"
                class="h-4 w-4 fill-zinc-400 group-hover:fill-zinc-600"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M12 0C5.37 0 0 5.506 0 12.303c0 5.445 3.435 10.043 8.205 11.674.6.107.825-.262.825-.585 0-.292-.015-1.261-.015-2.291C6 21.67 5.22 20.346 4.98 19.654c-.135-.354-.72-1.446-1.23-1.738-.42-.23-1.02-.8-.015-.815.945-.015 1.62.892 1.845 1.261 1.08 1.86 2.805 1.338 3.495 1.015.105-.8.42-1.338.765-1.645-2.67-.308-5.46-1.37-5.46-6.075 0-1.338.465-2.446 1.23-3.307-.12-.308-.54-1.569.12-3.26 0 0 1.005-.323 3.3 1.26.96-.276 1.98-.415 3-.415s2.04.139 3 .416c2.295-1.6 3.3-1.261 3.3-1.261.66 1.691.24 2.952.12 3.26.765.861 1.23 1.953 1.23 3.307 0 4.721-2.805 5.767-5.475 6.075.435.384.81 1.122.81 2.276 0 1.645-.015 2.968-.015 3.383 0 .323.225.707.825.585a12.047 12.047 0 0 0 5.919-4.489A12.536 12.536 0 0 0 24 12.304C24 5.505 18.63 0 12 0Z"
                />
              </svg>
              Source code on GitHub
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
